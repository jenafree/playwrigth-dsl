# Nightly Regression - Playwright DSL E-commerce
# Execução completa noturna com relatórios e métricas

name: '🌙 Nightly Regression'

on:
  schedule:
    # Todo dia às 2h da madrugada (UTC)
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente de teste'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  # === Regressão Completa ===
  regressao:
    name: '🔄 Regressão Completa - ${{ matrix.browser }}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        shard: [1/3, 2/3, 3/3]
    env:
      ENVIRONMENT: ${{ github.event.inputs.environment || 'staging' }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        
      - name: Run regression tests
        run: npx playwright test --browser=${{ matrix.browser }} --shard=${{ matrix.shard }}
        env:
          CI: true
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: regression-${{ matrix.browser }}-${{ strategy.job-index }}-results
          path: |
            test-results/
            playwright-report/
          retention-days: 30

  # === Métricas de Observabilidade ===
  metricas:
    name: '📊 Coleta de Métricas'
    runs-on: ubuntu-latest
    needs: regressao
    if: always()
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all test results
        uses: actions/download-artifact@v4
        
      - name: Generate metrics report
        run: |
          echo "## 📊 Métricas Nightly - $(date)" >> metrics.md
          echo "" >> metrics.md
          echo "### 🎯 Casos de Uso Executados" >> metrics.md
          echo "- **FinalizarCompra**: Caminho feliz crítico" >> metrics.md
          echo "- **AplicarCupom**: Cenários válido/inválido/expirado" >> metrics.md
          echo "- **Pagamento**: Recusas + aprovação" >> metrics.md
          echo "" >> metrics.md
          echo "### 🏗️ Arquitetura DSL" >> metrics.md
          echo "- **Eventos de Domínio**: ItemAdicionado, CupomAplicado, PedidoCriado" >> metrics.md
          echo "- **Invariantes Validadas**: total = itens + frete - desconto" >> metrics.md
          echo "- **Dados Canônicos**: SKUs, cupons, cartões sandbox" >> metrics.md
          echo "" >> metrics.md
          echo "### 🚨 Alertas" >> metrics.md
          echo "- Flakiness rate: < 5% (meta)" >> metrics.md
          echo "- P95 FinalizarCompra: < 30s (meta)" >> metrics.md
          echo "- Taxa de sucesso: > 95% (meta)" >> metrics.md
          
      - name: Upload metrics
        uses: actions/upload-artifact@v4
        with:
          name: nightly-metrics
          path: metrics.md

  # === Relatório Final ===
  relatorio:
    name: '📋 Relatório Nightly'
    runs-on: ubuntu-latest
    needs: [regressao, metricas]
    if: always()
    steps:
      - name: Generate final report
        run: |
          echo "## 🌙 Relatório Nightly Regression" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Data**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Ambiente**: ${{ env.ENVIRONMENT || 'staging' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Resultados" >> $GITHUB_STEP_SUMMARY
          echo "- **Status Regressão**: ${{ needs.regressao.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Métricas Coletadas**: ${{ needs.metricas.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🎯 Casos de Uso Validados" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ **FinalizarCompra**: Fluxo crítico E2E" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ **AplicarCupom**: Políticas promocionais" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ **Pagamento**: Integrações gateway" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🏗️ Arquitetura DSL" >> $GITHUB_STEP_SUMMARY
          echo "- **Comandos Simples**: Ações atômicas de domínio" >> $GITHUB_STEP_SUMMARY
          echo "- **Comandos Compostos**: Use cases orquestrados" >> $GITHUB_STEP_SUMMARY
          echo "- **Observabilidade**: Eventos + invariantes + métricas" >> $GITHUB_STEP_SUMMARY
          echo "- **Qualidade**: Global setup + fixtures + cleanup" >> $GITHUB_STEP_SUMMARY
